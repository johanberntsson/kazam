// -*- C++ -*- generated by wxGlade 0.3.1 on Mon Oct 06 17:01:42 2003

#include "DlgPreferences.h"
#include <wx/dirdlg.h>
#include <wx/generic/dirdlgg.h>

BEGIN_EVENT_TABLE(DlgPreferences, wxDialog)
EVT_BUTTON(BUTTON_BROWSE_COMPILER, DlgPreferences::OnBrowseCompiler)
EVT_BUTTON(BUTTON_BROWSE_LIBRARY, DlgPreferences::OnBrowseLibrary)
EVT_BUTTON(BUTTON_BROWSE_TERP, DlgPreferences::OnBrowseTerp)
EVT_BUTTON(BUTTON_BROWSE_TEMPLATE, DlgPreferences::OnBrowseTemplate)
END_EVENT_TABLE()

void DlgPreferences::Set(const wxString& compilerPath,
                         const wxString& libraryPath,
                         const wxString& terpPath,
                         const wxString& templatePath,
                         const wxString& author,
                         bool reload, bool warnOnExit,
                         int indentSize, bool useTabs)
{
  editCompilerPath->SetValue(compilerPath);
  editLibraryPath->SetValue(libraryPath);
  editTerpPath->SetValue(terpPath);
  editTemplatePath->SetValue(templatePath);
  editAuthor->SetValue(author);
  checkboxReloadActive->SetValue(reload);
  checkboxWarnUnsaved->SetValue(warnOnExit);
  spinIndentSize->SetValue(indentSize);
  radioSpace->SetValue(!useTabs);
  radioTab->SetValue(useTabs);
}

void DlgPreferences::Get(wxString *compilerPath, wxString *libraryPath,
                         wxString *terpPath, wxString *templatePath,
                         wxString *author, bool *reload, 
                         bool *warnOnExit, int *indentSize, bool *useTabs)
{
  *compilerPath=editCompilerPath->GetValue();
  *libraryPath=editLibraryPath->GetValue();
  *terpPath=editTerpPath->GetValue();
  *templatePath=editTemplatePath->GetValue();
  *author=editAuthor->GetValue();
  *reload=checkboxReloadActive->GetValue();
  *warnOnExit=checkboxWarnUnsaved->GetValue();
  *indentSize=spinIndentSize->GetValue();
  *useTabs=radioTab->GetValue();
}

void DlgPreferences::OnBrowseTerp(wxCommandEvent& WXUNUSED(event))
{
  wxString filename=wxFileSelector("Choose the Inform terp");
  if(!filename.IsEmpty()) editTerpPath->SetValue(filename);
}

void DlgPreferences::OnBrowseTemplate(wxCommandEvent& WXUNUSED(event))
{
  wxString filename=wxFileSelector("Choose the template Inform source file");
  if(!filename.IsEmpty()) editTemplatePath->SetValue(filename);
}

void DlgPreferences::OnBrowseLibrary(wxCommandEvent& WXUNUSED(event))
{
  wxString dir=wxDirSelector("Choose the Inform library directory");
  if(!dir.IsEmpty()) editLibraryPath->SetValue(dir);
}

void DlgPreferences::OnBrowseCompiler(wxCommandEvent& WXUNUSED(event))
{
  wxString filename=wxFileSelector("Choose the Inform compiler");
  if(!filename.IsEmpty()) editCompilerPath->SetValue(filename);
}

DlgPreferences::DlgPreferences(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE)
{
    // begin wxGlade: DlgPreferences::DlgPreferences
    notebook_2 = new wxNotebook(this, -1, wxDefaultPosition, wxDefaultSize, 0);
    mapPanel = new wxPanel(notebook_2, -1);
    generalPanel = new wxPanel(notebook_2, -1);
    label_5 = new wxStaticText(generalPanel, -1, wxT("Compiler"));
    editCompilerPath = new wxTextCtrl(generalPanel, -1, wxT(""));
    buttonBrowseCompiler = new wxButton(generalPanel, BUTTON_BROWSE_COMPILER, wxT("..."));
    label_2 = new wxStaticText(generalPanel, -1, wxT("Library"));
    editLibraryPath = new wxTextCtrl(generalPanel, -1, wxT(""));
    buttonBrowseLibrary = new wxButton(generalPanel, BUTTON_BROWSE_LIBRARY, wxT("..."));
    label_6 = new wxStaticText(generalPanel, -1, wxT("Terp"));
    editTerpPath = new wxTextCtrl(generalPanel, -1, wxT(""));
    buttonBrowseTerp = new wxButton(generalPanel, BUTTON_BROWSE_TERP, wxT("..."));
    labelTemplate = new wxStaticText(generalPanel, -1, wxT("Template"));
    editTemplatePath = new wxTextCtrl(generalPanel, -1, wxT(""));
    buttonBrowseTemplate = new wxButton(generalPanel, BUTTON_BROWSE_TEMPLATE, wxT("..."));
    label_7 = new wxStaticText(generalPanel, -1, wxT("Author"));
    editAuthor = new wxTextCtrl(generalPanel, -1, wxT(""));
    label_8 = new wxStaticText(generalPanel, -1, wxT("Startup"));
    checkboxReloadActive = new wxCheckBox(generalPanel, -1, wxT("Reload active project"));
    labelShutdown = new wxStaticText(generalPanel, -1, wxT("Shutdown"));
    checkboxWarnUnsaved = new wxCheckBox(generalPanel, -1, wxT("Warn if data not saved"));
    label_1 = new wxStaticText(generalPanel, -1, wxT("Indent"));
    spinIndentSize = new wxSpinCtrl(generalPanel, -1, "", wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 1, 100);
    radioSpace = new wxRadioButton(generalPanel, -1, wxT("spaces"));
    radioTab = new wxRadioButton(generalPanel, -1, wxT("tabs"));
    label_9 = new wxStaticText(mapPanel, -1, wxT("Width  "));
    spinWidth = new wxSpinCtrl(mapPanel, -1, "", wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_10 = new wxStaticText(mapPanel, -1, wxT("Height  "));
    spinHeight = new wxSpinCtrl(mapPanel, -1, "", wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    buttonOK = new wxButton(this, wxID_OK, wxT("OK"));
    buttonCancel = new wxButton(this, wxID_CANCEL, wxT("Cancel"));

    set_properties();
    do_layout();
    // end wxGlade
}


void DlgPreferences::set_properties()
{
    // begin wxGlade: DlgPreferences::set_properties
    SetTitle(wxT("Preferences"));
    buttonBrowseCompiler->SetSize(wxSize(30, -1));
    buttonBrowseLibrary->SetSize(wxSize(30, -1));
    buttonBrowseTerp->SetSize(wxSize(30, -1));
    buttonBrowseTemplate->SetSize(wxSize(30, -1));
    editAuthor->SetSize(wxSize(474, 20));
    notebook_2->SetSize(wxSize(531, 239));
    // end wxGlade
}


void DlgPreferences::do_layout()
{
    // begin wxGlade: DlgPreferences::do_layout
    wxFlexGridSizer* grid_sizer_1 = new wxFlexGridSizer(2, 1, 0, 0);
    wxGridSizer* grid_sizer_2 = new wxGridSizer(1, 2, 0, 0);
    wxFlexGridSizer* grid_sizer_6 = new wxFlexGridSizer(2, 2, 0, 0);
    wxFlexGridSizer* grid_sizer_3 = new wxFlexGridSizer(6, 2, 0, 0);
    wxFlexGridSizer* grid_sizer_7 = new wxFlexGridSizer(1, 3, 0, 0);
    wxFlexGridSizer* grid_sizer_9 = new wxFlexGridSizer(1, 2, 0, 0);
    wxFlexGridSizer* grid_sizer_5 = new wxFlexGridSizer(1, 2, 0, 0);
    wxFlexGridSizer* grid_sizer_8 = new wxFlexGridSizer(1, 2, 0, 0);
    wxFlexGridSizer* grid_sizer_4 = new wxFlexGridSizer(1, 2, 0, 0);
    grid_sizer_3->Add(label_5, 0, 0, 0);
    grid_sizer_4->Add(editCompilerPath, 0, wxEXPAND, 0);
    grid_sizer_4->Add(buttonBrowseCompiler, 0, 0, 0);
    grid_sizer_4->AddGrowableCol(0);
    grid_sizer_3->Add(grid_sizer_4, 1, wxEXPAND, 0);
    grid_sizer_3->Add(label_2, 0, 0, 0);
    grid_sizer_8->Add(editLibraryPath, 0, wxEXPAND, 0);
    grid_sizer_8->Add(buttonBrowseLibrary, 0, 0, 0);
    grid_sizer_8->AddGrowableCol(0);
    grid_sizer_3->Add(grid_sizer_8, 1, wxEXPAND, 0);
    grid_sizer_3->Add(label_6, 0, 0, 0);
    grid_sizer_5->Add(editTerpPath, 0, wxEXPAND, 0);
    grid_sizer_5->Add(buttonBrowseTerp, 0, 0, 0);
    grid_sizer_5->AddGrowableCol(0);
    grid_sizer_3->Add(grid_sizer_5, 1, wxEXPAND, 0);
    grid_sizer_3->Add(labelTemplate, 0, 0, 0);
    grid_sizer_9->Add(editTemplatePath, 0, wxEXPAND, 0);
    grid_sizer_9->Add(buttonBrowseTemplate, 0, 0, 0);
    grid_sizer_9->AddGrowableCol(0);
    grid_sizer_3->Add(grid_sizer_9, 1, wxEXPAND, 0);
    grid_sizer_3->Add(label_7, 0, 0, 0);
    grid_sizer_3->Add(editAuthor, 0, wxEXPAND, 0);
    grid_sizer_3->Add(label_8, 0, 0, 0);
    grid_sizer_3->Add(checkboxReloadActive, 0, 0, 0);
    grid_sizer_3->Add(labelShutdown, 0, 0, 0);
    grid_sizer_3->Add(checkboxWarnUnsaved, 0, 0, 0);
    grid_sizer_3->Add(label_1, 0, 0, 0);
    grid_sizer_7->Add(spinIndentSize, 0, wxEXPAND, 0);
    grid_sizer_7->Add(radioSpace, 0, 0, 0);
    grid_sizer_7->Add(radioTab, 0, 0, 0);
    grid_sizer_7->AddGrowableCol(0);
    grid_sizer_3->Add(grid_sizer_7, 1, wxEXPAND, 0);
    generalPanel->SetAutoLayout(true);
    generalPanel->SetSizer(grid_sizer_3);
    grid_sizer_3->Fit(generalPanel);
    grid_sizer_3->SetSizeHints(generalPanel);
    grid_sizer_3->AddGrowableCol(1);
    grid_sizer_6->Add(label_9, 0, 0, 0);
    grid_sizer_6->Add(spinWidth, 0, wxEXPAND, 0);
    grid_sizer_6->Add(label_10, 0, 0, 0);
    grid_sizer_6->Add(spinHeight, 0, wxEXPAND, 0);
    mapPanel->SetAutoLayout(true);
    mapPanel->SetSizer(grid_sizer_6);
    grid_sizer_6->Fit(mapPanel);
    grid_sizer_6->SetSizeHints(mapPanel);
    grid_sizer_6->AddGrowableCol(1);
    notebook_2->AddPage(generalPanel, wxT("General"));
    notebook_2->AddPage(mapPanel, wxT("Map View"));
    grid_sizer_1->Add(new wxNotebookSizer(notebook_2), 1, wxEXPAND, 0);
    grid_sizer_2->Add(buttonOK, 0, wxALIGN_CENTER_HORIZONTAL, 0);
    grid_sizer_2->Add(buttonCancel, 0, wxALIGN_CENTER_HORIZONTAL, 0);
    grid_sizer_1->Add(grid_sizer_2, 1, wxEXPAND, 0);
    SetAutoLayout(true);
    SetSizer(grid_sizer_1);
    grid_sizer_1->Fit(this);
    grid_sizer_1->SetSizeHints(this);
    grid_sizer_1->AddGrowableRow(0);
    grid_sizer_1->AddGrowableCol(0);
    Layout();
    // end wxGlade
}

