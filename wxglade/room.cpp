// -*- C++ -*- generated by wxGlade 0.3.1 on Fri Oct 10 10:29:01 2003

#include "room.h"


MyFrame::MyFrame(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxFrame(parent, id, title, pos, size, wxDEFAULT_FRAME_STYLE)
{
    // begin wxGlade: MyFrame::MyFrame
    notebook_1 = new wxNotebook(this, -1, wxDefaultPosition, wxDefaultSize, 0);
    propertyPanel = new wxPanel(notebook_1, -1);
    labelClass = new wxStaticText(propertyPanel, -1, wxT("Class"));
    const wxString comboClass_choices[] = {
        wxT("1"),
        wxT("2"),
        wxT("3"),
        wxT("4"),
        wxT("5")
    };
    comboClass = new wxComboBox(propertyPanel, -1, "", wxDefaultPosition, wxDefaultSize, 5, comboClass_choices, wxCB_DROPDOWN|wxCB_READONLY);
    labelID = new wxStaticText(propertyPanel, -1, wxT("ID"));
    editID = new wxTextCtrl(propertyPanel, -1, wxT(""));
    labelName = new wxStaticText(propertyPanel, -1, wxT("Name"));
    editName = new wxTextCtrl(propertyPanel, -1, wxT(""));
    labelScenery = new wxStaticText(propertyPanel, -1, wxT("Scenery"));
    editScenery = new wxTextCtrl(propertyPanel, -1, wxT(""));
    editDescription = new wxTextCtrl(propertyPanel, -1, wxT(""), wxDefaultPosition, wxDefaultSize, wxTE_MULTILINE|wxHSCROLL);
    labelAttributes = new wxStaticText(propertyPanel, -1, wxT("Attributes"));
    checkboxLight = new wxCheckBox(propertyPanel, -1, wxT("light"));
    const wxString comboNW_choices[] = {
        wxT("1"),
        wxT("2"),
        wxT("3"),
        wxT("4"),
        wxT("5")
    };
    comboNW = new wxComboBox(propertyPanel, -1, "", wxDefaultPosition, wxDefaultSize, 5, comboNW_choices, wxCB_DROPDOWN);
    const wxString comboN_choices[] = {
        wxT("1"),
        wxT("2"),
        wxT("3"),
        wxT("4"),
        wxT("5")
    };
    comboN = new wxComboBox(propertyPanel, -1, "", wxDefaultPosition, wxDefaultSize, 5, comboN_choices, wxCB_DROPDOWN);
    const wxString comboNE_choices[] = {
        wxT("1"),
        wxT("2"),
        wxT("3"),
        wxT("4"),
        wxT("5")
    };
    comboNE = new wxComboBox(propertyPanel, -1, "", wxDefaultPosition, wxDefaultSize, 5, comboNE_choices, wxCB_DROPDOWN);
    const wxString comboW_choices[] = {
        wxT("1"),
        wxT("2"),
        wxT("3"),
        wxT("4"),
        wxT("5")
    };
    comboW = new wxComboBox(propertyPanel, -1, "", wxDefaultPosition, wxDefaultSize, 5, comboW_choices, wxCB_DROPDOWN);
    labelExits = new wxStaticText(propertyPanel, -1, wxT("EXITS"));
    const wxString comboE_choices[] = {
        wxT("1"),
        wxT("2"),
        wxT("3"),
        wxT("4"),
        wxT("5")
    };
    comboE = new wxComboBox(propertyPanel, -1, "", wxDefaultPosition, wxDefaultSize, 5, comboE_choices, wxCB_DROPDOWN);
    const wxString comboSW_choices[] = {
        wxT("1"),
        wxT("2"),
        wxT("3"),
        wxT("4"),
        wxT("5")
    };
    comboSW = new wxComboBox(propertyPanel, -1, "", wxDefaultPosition, wxDefaultSize, 5, comboSW_choices, wxCB_DROPDOWN);
    const wxString comboS_choices[] = {
        wxT("1"),
        wxT("2"),
        wxT("3"),
        wxT("4"),
        wxT("5")
    };
    comboS = new wxComboBox(propertyPanel, -1, "", wxDefaultPosition, wxDefaultSize, 5, comboS_choices, wxCB_DROPDOWN);
    const wxString comboSE_choices[] = {
        wxT("1"),
        wxT("2"),
        wxT("3"),
        wxT("4"),
        wxT("5")
    };
    comboSE = new wxComboBox(propertyPanel, -1, "", wxDefaultPosition, wxDefaultSize, 5, comboSE_choices, wxCB_DROPDOWN);
    labelUp = new wxStaticText(propertyPanel, -1, wxT("Up"));
    const wxString comboUp_choices[] = {
        wxT("1"),
        wxT("2"),
        wxT("3"),
        wxT("4"),
        wxT("5")
    };
    comboUp = new wxComboBox(propertyPanel, -1, "", wxDefaultPosition, wxDefaultSize, 5, comboUp_choices, wxCB_DROPDOWN);
    labelDown = new wxStaticText(propertyPanel, -1, wxT("Down"));
    const wxString comboDown_choices[] = {
        wxT("1"),
        wxT("2"),
        wxT("3"),
        wxT("4"),
        wxT("5")
    };
    comboDown = new wxComboBox(propertyPanel, -1, "", wxDefaultPosition, wxDefaultSize, 5, comboDown_choices, wxCB_DROPDOWN);
    labelIn = new wxStaticText(propertyPanel, -1, wxT("In"));
    const wxString comboIn_choices[] = {
        wxT("1"),
        wxT("2"),
        wxT("3"),
        wxT("4"),
        wxT("5")
    };
    comboIn = new wxComboBox(propertyPanel, -1, "", wxDefaultPosition, wxDefaultSize, 5, comboIn_choices, wxCB_DROPDOWN);
    labelOut = new wxStaticText(propertyPanel, -1, wxT("Out"));
    const wxString comboOut_choices[] = {
        wxT("1"),
        wxT("2"),
        wxT("3"),
        wxT("4"),
        wxT("5")
    };
    comboOut = new wxComboBox(propertyPanel, -1, "", wxDefaultPosition, wxDefaultSize, 5, comboOut_choices, wxCB_DROPDOWN);

    set_properties();
    do_layout();
    // end wxGlade
}


void MyFrame::set_properties()
{
    // begin wxGlade: MyFrame::set_properties
    SetTitle(wxT("frame_1"));
    comboClass->SetToolTip(wxT("The class of this room. Default is \"Object\" (no class)"));
    editID->SetToolTip(wxT("This is the object ID"));
    editName->SetToolTip(wxT("The name of this room will appear in the status bar"));
    editScenery->SetToolTip(wxT("A comma-separated list of \"fake\" scenery objects"));
    editDescription->SetToolTip(wxT("Text that describes this room"));
    checkboxLight->SetToolTip(wxT("Decides if your can see anything"));
    comboNW->SetSelection(0);
    comboN->SetSelection(0);
    comboNE->SetSelection(0);
    comboW->SetSelection(0);
    comboE->SetSelection(0);
    comboSW->SetSelection(0);
    comboS->SetSelection(0);
    comboSE->SetSelection(0);
    comboUp->SetSelection(0);
    comboDown->SetSelection(0);
    comboIn->SetSelection(0);
    comboOut->SetSelection(0);
    // end wxGlade
}


void MyFrame::do_layout()
{
    // begin wxGlade: MyFrame::do_layout
    wxBoxSizer* sizer_1 = new wxBoxSizer(wxVERTICAL);
    wxFlexGridSizer* sizer_2 = new wxFlexGridSizer(3, 1, 0, 0);
    wxFlexGridSizer* grid_sizer_4 = new wxFlexGridSizer(1, 2, 0, 0);
    wxFlexGridSizer* grid_sizer_3 = new wxFlexGridSizer(2, 4, 0, 0);
    wxGridSizer* grid_sizer_1 = new wxGridSizer(3, 3, 0, 0);
    wxFlexGridSizer* grid_sizer_2 = new wxFlexGridSizer(6, 2, 0, 0);
    grid_sizer_2->Add(labelClass, 0, 0, 0);
    grid_sizer_2->Add(comboClass, 0, wxEXPAND, 0);
    grid_sizer_2->Add(labelID, 0, 0, 0);
    grid_sizer_2->Add(editID, 0, wxEXPAND, 0);
    grid_sizer_2->Add(labelName, 0, 0, 0);
    grid_sizer_2->Add(editName, 0, wxEXPAND, 0);
    grid_sizer_2->Add(labelScenery, 0, 0, 0);
    grid_sizer_2->Add(editScenery, 0, wxEXPAND, 0);
    wxStaticText* labelDescription = new wxStaticText(propertyPanel, -1, wxT("Description"));
    grid_sizer_2->Add(labelDescription, 0, 0, 0);
    grid_sizer_2->Add(editDescription, 0, wxEXPAND, 0);
    grid_sizer_2->Add(labelAttributes, 0, 0, 0);
    grid_sizer_2->Add(checkboxLight, 0, 0, 0);
    grid_sizer_2->Add(20, 20, 0, 0, 0);
    grid_sizer_2->AddGrowableRow(4);
    grid_sizer_2->AddGrowableCol(1);
    sizer_2->Add(grid_sizer_2, 1, wxEXPAND, 0);
    grid_sizer_1->Add(comboNW, 0, wxEXPAND, 0);
    grid_sizer_1->Add(comboN, 0, wxEXPAND, 0);
    grid_sizer_1->Add(comboNE, 0, wxEXPAND, 0);
    grid_sizer_1->Add(comboW, 0, wxEXPAND, 0);
    grid_sizer_1->Add(labelExits, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_1->Add(comboE, 0, wxEXPAND, 0);
    grid_sizer_1->Add(comboSW, 0, wxEXPAND, 0);
    grid_sizer_1->Add(comboS, 0, wxEXPAND, 0);
    grid_sizer_1->Add(comboSE, 0, wxEXPAND, 0);
    sizer_2->Add(grid_sizer_1, 1, wxEXPAND, 0);
    grid_sizer_3->Add(labelUp, 0, 0, 0);
    grid_sizer_3->Add(comboUp, 0, wxEXPAND, 0);
    grid_sizer_3->Add(labelDown, 0, 0, 0);
    grid_sizer_3->Add(comboDown, 0, wxEXPAND, 0);
    grid_sizer_3->Add(labelIn, 0, 0, 0);
    grid_sizer_3->Add(comboIn, 0, wxEXPAND, 0);
    grid_sizer_3->Add(labelOut, 0, 0, 0);
    grid_sizer_3->Add(comboOut, 0, wxEXPAND, 0);
    grid_sizer_3->AddGrowableCol(1);
    grid_sizer_3->AddGrowableCol(3);
    sizer_2->Add(grid_sizer_3, 1, wxEXPAND, 0);
    grid_sizer_4->AddGrowableRow(0);
    grid_sizer_4->AddGrowableCol(1);
    sizer_2->Add(grid_sizer_4, 1, wxEXPAND, 0);
    propertyPanel->SetAutoLayout(true);
    propertyPanel->SetSizer(sizer_2);
    sizer_2->Fit(propertyPanel);
    sizer_2->SetSizeHints(propertyPanel);
    sizer_2->AddGrowableRow(0);
    sizer_2->AddGrowableCol(0);
    notebook_1->AddPage(propertyPanel, wxT("tab1"));
    sizer_1->Add(new wxNotebookSizer(notebook_1), 1, wxEXPAND, 0);
    SetAutoLayout(true);
    SetSizer(sizer_1);
    sizer_1->Fit(this);
    sizer_1->SetSizeHints(this);
    Layout();
    // end wxGlade
}

